{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/pages/home/home.ts","../../src/pages/game/game.ts","../../src/providers/playerType.decorator.ts","../../src/providers/playerType.enum.ts","../../src/providers/gamerManager.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/components/board-cell/board-cell.ts","../../src/components/game-board/game-board.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 107;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 107\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 148;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 148\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { GamePage } from '../game/game'\nimport { GameManagerService } from \"../../providers/gamerManager.service\";\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n  providers: [GameManagerService]\n})\nexport class HomePage {\n  startWith: string = 'x';\n  gameType: number = 3;\n\n  constructor(public navCtrl: NavController, private gameManagerService: GameManagerService) {\n  }\n\n  startGame(event) {\n    this.navCtrl.setRoot(GamePage, { startWith: this.startWith, gameType: this.gameType });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams } from 'ionic-angular';\r\nimport { PlayerType } from '../../providers/playerType.enum';\r\nimport { PlayerTypeAware } from '../../providers/playerType.decorator';\r\nimport { GameManagerService } from '../../providers/gamerManager.service';\r\n\r\n@Component({\r\n    selector: 'page-game',\r\n    templateUrl: 'game.html',\r\n    providers: [GameManagerService]\r\n})\r\n@PlayerTypeAware\r\nexport class GamePage {\r\n    startTurn: boolean;\r\n    gameType: number;\r\n    playMatrix: any[] = [];\r\n    cellToBeUpdated: { cellIndex: number, gamePlayed: string } = null;\r\n\r\n\r\n    constructor(public navCtrl: NavController, private navParams: NavParams, private gameManagerService: GameManagerService) {\r\n        let startWith = navParams.get('startWith');\r\n        this.gameType = navParams.get('gameType');\r\n\r\n        this.gameManagerService.computer = 'x';\r\n        this.gameManagerService.player = 'o';\r\n        this.gameManagerService.gameType = this.gameType;\r\n        this.playMatrix = this.gameManagerService.getGameOriginalPlayMatrix();\r\n\r\n        if (startWith == 'x') { //computer Start\r\n            this.startTurn = true;\r\n            this.makeComputerPlay();\r\n        }\r\n        else { //human start\r\n            this.startTurn = false;\r\n        }\r\n    }\r\n\r\n    onGameReportArrayUpdated(obj: any) {\r\n        for (let i = 0; i < obj.gameReportArr.length; i++) {\r\n            if (obj.gameReportArr[i]) {\r\n                this.playMatrix[i] = obj.gameReportArr[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    makeComputerPlay() {\r\n        let gameResult = this.gameManagerService.calculateBestMove(this.playMatrix, this.gameManagerService.computer);\r\n        this.cellToBeUpdated = { cellIndex: gameResult.index, gamePlayed: 'x' };\r\n    }\r\n\r\n    onPlayerPlayed(obj: any) {\r\n        this.makeComputerPlay();\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/game/game.ts","import { PlayerType } from './playerType.enum';\r\n\r\nexport function PlayerTypeAware(constructor: Function) {\r\n    constructor.prototype.PlayerType = PlayerType;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/playerType.decorator.ts","export enum PlayerType {\r\n    Empty = 0,\r\n    O = 1,\r\n    X = 2\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/playerType.enum.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GameManagerService {\r\n    player: string;\r\n    computer: string;\r\n    gameType: number;\r\n    playMatrix: any[] = [];\r\n    constructor() {\r\n\r\n    }\r\n\r\n    getGameOriginalPlayMatrix(): any[] {\r\n        if (this.gameType == 5) {\r\n            this.playMatrix = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24];\r\n        }\r\n        else if (this.gameType == 4) {\r\n            this.playMatrix = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n        }\r\n        else {\r\n            this.playMatrix = [0, 1, 2, 3, 4, 5, 6, 7, 8];\r\n        }\r\n        return this.playMatrix;\r\n    }\r\n\r\n\r\n\r\n    //check if there is a current win in the board\r\n    checkWinSituation(inputArr, moveType) {\r\n        let matrix = this.listToMatrix(inputArr, this.gameType);\r\n\r\n        let matrixLength = matrix.length;\r\n        //check all rows\r\n        //check all columns\r\n        for (var i = 0; i < matrixLength; i++) {\r\n            let rowResult = this.getRow(matrix, i);\r\n            if (this.checkWinningArray(rowResult, moveType)) {\r\n                return true;\r\n            }\r\n            let colResult = this.getCol(matrix, i);\r\n            if (this.checkWinningArray(colResult, moveType)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        //check left diagonal\r\n        let leftDiag = this.getLeftDiag(matrix);\r\n        if (this.checkWinningArray(leftDiag, moveType)) {\r\n            return true;\r\n        }\r\n        //check right diagonal\r\n        let rightDiag = this.getRightDiag(matrix);\r\n        if (this.checkWinningArray(rightDiag, moveType)) {\r\n            return true;\r\n        }\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    listToMatrix(list, elementsPerSubArray) {\r\n        let matrix = [], i, k;\r\n\r\n        for (i = 0, k = -1; i < list.length; i++) {\r\n            if (i % elementsPerSubArray === 0) {\r\n                k++;\r\n                matrix[k] = [];\r\n            }\r\n\r\n            matrix[k].push(list[i]);\r\n        }\r\n\r\n        return matrix;\r\n    }\r\n\r\n    //check if a row or column all have the same move type i.e. wining array\r\n    checkWinningArray(rowOrCol, moveType) {\r\n        let result = rowOrCol.filter(cellValue => cellValue == moveType);\r\n        if (result.length == rowOrCol.length) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //get column by number from two dimensional array\r\n    getCol(matrix, col) {\r\n        var column = [];\r\n        for (var i = 0; i < matrix.length; i++) {\r\n            column.push(matrix[i][col]);\r\n        }\r\n        return column;\r\n    }\r\n\r\n    //get row by number from two dimensional array\r\n    getRow(matrix, row) {\r\n        var result = [];\r\n        for (var i = 0; i < matrix.length; i++) {\r\n            result.push(matrix[row][i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //get left Diagonal part [0,0]..[1,1]..[2,2] from two dimensional array\r\n    getLeftDiag(matrix) {\r\n        var result = [];\r\n        for (var i = 0; i < matrix.length; i++) {\r\n            result.push(matrix[i][i]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //get right Diagonal part [0,2]..[1,1]..[2,0] from two dimensional array\r\n    getRightDiag(matrix) {\r\n        var result = [];\r\n        for (var i = 0; i < matrix.length; i++) {\r\n            result.push(matrix[i][matrix.length - i - 1]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    calculateBestMove(playMatrix, currentPlayer) {\r\n        //implementing minimax algorithm\r\n        //check for terminal states\r\n        //get available play cells\r\n        //recurse through the matrix and empty cells to calculate the highest and lowest score according to who is playing\r\n\r\n        //get available playing cells\r\n        var availablePlayingCells = this.getMatrixEmptyCells(playMatrix);\r\n\r\n        // checks for the terminal states such as win, lose, and tie and returning a value accordingly\r\n        if (this.checkWinSituation(playMatrix, this.player)) {\r\n            return { outcome: -10 };\r\n        }\r\n        else if (this.checkWinSituation(playMatrix, this.computer)) {\r\n            return { outcome: 10 };\r\n        }\r\n        else if (availablePlayingCells.length === 0) {\r\n            return { outcome: 0 };\r\n        }\r\n\r\n        // an array to collect all Minimax possible plays\r\n        let minimaxPlaysCollection = this.getMiniMaxPossibleMoves(availablePlayingCells, playMatrix, currentPlayer);\r\n\r\n\r\n        // assing play with highest score to computer and lowest to opponent\r\n        let bestPlay = null;\r\n        if (currentPlayer === this.computer) {\r\n            var bestOutCome = -10000;\r\n            for (var i = 0; i < minimaxPlaysCollection.length; i++) {\r\n                if (minimaxPlaysCollection[i].outcome > bestOutCome) {\r\n                    bestOutCome = minimaxPlaysCollection[i].outcome;\r\n                    bestPlay = i;\r\n                }\r\n            }\r\n        } else {\r\n            let bestOutCome = 10000;\r\n            for (let i = 0; i < minimaxPlaysCollection.length; i++) {\r\n                if (minimaxPlaysCollection[i].outcome < bestOutCome) {\r\n                    bestOutCome = minimaxPlaysCollection[i].outcome;\r\n                    bestPlay = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        // return the chosen move (object) from the array to the higher depth\r\n        return minimaxPlaysCollection[bestPlay];\r\n    }\r\n\r\n    getMiniMaxPossibleMoves(freeCells, playMatrix, currentPlayer) {\r\n        let possibleMoves = []\r\n        for (let i = 0; i < freeCells.length; i++) {\r\n            //create an object for each and store the index of that spot that was stored as a number in the object's index key\r\n            //for each free cell , calculate cell outcome and index\r\n            let play = { index: null, outcome: null };\r\n            play.index = playMatrix[freeCells[i]];\r\n\r\n            // set cell to current player\r\n            playMatrix[freeCells[i]] = currentPlayer;\r\n\r\n            //if collect the score resulted from calling minimax on the opponent of the current player\r\n            if (currentPlayer == this.computer) {\r\n                let result = this.calculateBestMove(playMatrix, this.player);\r\n                play.outcome = result.outcome;\r\n            }\r\n            else {\r\n                let result = this.calculateBestMove(playMatrix, this.computer);\r\n                play.outcome = result.outcome;\r\n            }\r\n\r\n            //clear cell\r\n            playMatrix[freeCells[i]] = play.index;\r\n\r\n            // push the object to the array\r\n            possibleMoves.push(play);\r\n        }\r\n\r\n        return possibleMoves;\r\n    }\r\n\r\n    getMatrixEmptyCells(matrix) {\r\n        return matrix.filter(s => s != \"o\" && s != \"x\");\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/gamerManager.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport { GamePage } from '../pages/game/game';\nimport { BoardCellComponent } from '../components/board-cell/board-cell';\nimport { GameBoardComponent } from '../components/game-board/game-board';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    GamePage,\n    BoardCellComponent,\n    GameBoardComponent\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    GamePage,\n    BoardCellComponent,\n    GameBoardComponent\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges, OnInit } from '@angular/core';\r\nimport { PlayerType } from '../../providers/playerType.enum';\r\nimport { PlayerTypeAware } from '../../providers/playerType.decorator';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Component({\r\n    selector: 'board-cell',\r\n    templateUrl: 'board-cell.html'\r\n})\r\n@PlayerTypeAware\r\nexport class BoardCellComponent implements OnChanges {\r\n\r\n    @Input() cellIndex: number;\r\n    @Input() isXTurn: boolean = false;\r\n\r\n    @Input()\r\n    set updateCell(updateCell: { cellIndex: number, gamePlayed: string }) {\r\n        if (updateCell && updateCell.cellIndex == this.cellIndex) {\r\n            if (updateCell.gamePlayed == 'o') {\r\n                this.playerType = PlayerType.O;\r\n            }\r\n            else {\r\n                this.playerType = PlayerType.X;\r\n            }\r\n            this.isCellAvailable = false;\r\n            this.onCellOccupied.emit({ cellNumber: this.cellIndex, playerType: this.playerType, isCellAvailable: false });\r\n        }\r\n    }\r\n\r\n    playerType: PlayerType = PlayerType.Empty;\r\n    isCellAvailable: boolean = true;\r\n    @Output() onCellOccupied = new EventEmitter<{ cellNumber: number, playerType: PlayerType, isCellAvailable: boolean }>();\r\n    @Output() onPlayerPlayed = new EventEmitter<boolean>();\r\n    constructor() {\r\n    }\r\n\r\n    setXO(event) {\r\n        if (this.isCellAvailable) {\r\n            if (this.isXTurn) {\r\n                this.playerType = PlayerType.X;\r\n            }\r\n            else {\r\n                this.playerType = PlayerType.O;\r\n            }\r\n            this.isCellAvailable = false;\r\n\r\n            this.onCellOccupied.emit({ cellNumber: this.cellIndex, playerType: this.playerType, isCellAvailable: false });\r\n            this.onPlayerPlayed.emit(true);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/board-cell/board-cell.ts","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'game-board',\r\n  templateUrl: 'game-board.html'\r\n})\r\nexport class GameBoardComponent {\r\n\r\n  @Input() gameWidth;\r\n\r\n  // index: number;\r\n  @Input() isXTurn;\r\n  lastPlayerIsX: boolean = this.isXTurn;\r\n  gameReportArr: any[] = [];\r\n  @Output() onGameReportArrayUpdated = new EventEmitter<{ gameReportArr: any[] }>();\r\n  @Output() onPlayerPlayedEvent = new EventEmitter<boolean>();\r\n\r\n  @Input()\r\n  set updateGameBoard(updateCell: { cellIndex: number, gamePlayed: string }) {\r\n    this.cellToBeUpdated = updateCell;\r\n    if (this.cellToBeUpdated) {\r\n      this.isXTurn = !this.isXTurn;\r\n\r\n    }\r\n  }\r\n\r\n  cellToBeUpdated: { cellIndex: number, gamePlayed: string } = null;\r\n  constructor() {\r\n\r\n  }\r\n\r\n  setXO(obj) {\r\n    this.isXTurn = !this.isXTurn;\r\n  }\r\n\r\n\r\n  onCellOccupied(obj: any) {\r\n    if (obj) {\r\n      if (obj.playerType == 0) {\r\n        this.gameReportArr[obj.cellNumber] = obj.cellNumber;\r\n      }\r\n      else if (obj.playerType == 1) {\r\n        this.gameReportArr[obj.cellNumber] = 'o';\r\n      }\r\n      else {\r\n        this.gameReportArr[obj.cellNumber] = 'x';\r\n      }\r\n\r\n      this.onGameReportArrayUpdated.emit({ gameReportArr: this.gameReportArr });\r\n\r\n    }\r\n  }\r\n\r\n  onPlayerPlayed(obj: any) {\r\n    this.onPlayerPlayedEvent.emit(true);\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/game-board/game-board.ts"],"sourceRoot":""}